{"ast":null,"code":"var _jsxFileName = \"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx\";\nimport * as React from 'react';\nimport Grid from './grid';\nimport { boardPositionData } from '../data/boardPositionData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeroList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.componentDidMount = () => {\n      let allyBoard = this.state.allyBoard;\n      allyBoard = boardPositionData;\n      this.setState({\n        allyBoard\n      });\n      //console.log(allyBoard)\n\n      let enemyBoard = this.state.enemyBoard;\n      enemyBoard = boardPositionData;\n      this.setState({\n        enemyBoard\n      });\n      let heroTrickery = this.state.heroTrickery;\n      heroTrickery = boardPositionData;\n      this.setState({\n        heroTrickery\n      });\n    };\n    this.handlePlacePick = place => {\n      //SHOULD CORRECTLY TYPE THIS\n      if (this.props.pickPhase === 'placing') {\n        //need a handler in App.JSX that changes phase back to picking\n        let index = this.props.allyHeroes.length;\n        let hero = this.props.allyHeroes[index - 1];\n        let allyBoard = [...this.state.allyBoard];\n        allyBoard[place].hero = hero;\n        this.setState({\n          allyBoard\n        });\n        this.props.onPlaced(); //ITERATING BETWEEN PLACING AND PICKING IS NOT WORKING\n      }\n    };\n    this.handleEnemyPlacePick = () => {\n      //EXPERIMENTAL\n      let index = this.props.enemyHeroes.length;\n      let hero = this.props.enemyHeroes[index - 1];\n      let enemyBoardIndex = [...this.state.enemyBoard];\n      console.log(enemyBoardIndex);\n      const filtered = enemyBoardIndex.filter(h => h.hero === '');\n      console.log(filtered);\n      let position = enemyBoardIndex[Math.floor(Math.random() * enemyBoardIndex.length)].position;\n      let enemyBoard = [...this.state.enemyBoard];\n      enemyBoardIndex[position].hero = hero;\n      let test = [...this.state.heroTrickery];\n      console.log(test);\n      let testFiltered = test.filter(h => h.hero == '');\n      console.log(testFiltered);\n      const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n      const result = words.filter(word => word.length > 6);\n      console.log(result);\n      // expected output: Array [\"exuberant\", \"destruction\", \"present\"]\n\n      //EXPERIMENTAL\n\n      /*\n                  let index = this.props.enemyHeroes.length\n                  let hero = this.props.enemyHeroes[index -1]\n                  let place = Math.floor(Math.random()*8)\n                  \n                  let enemyBoard = [...this.state.enemyBoard]\n                  console.log(enemyBoard[place])\n                  if (enemyBoard[place].hero === null) {\n                      enemyBoard[place].hero = hero\n                  }\n                  */\n      this.setState({\n        enemyBoard\n      });\n      this.props.onPlaced();\n    };\n    this.state = {\n      allyBoard: [/*\n                  {position: 0, hero: null},\n                  {position: 1, hero: null},\n                  {position: 2, hero: null},\n                  {position: 3, hero: null},\n                  {position: 4, hero: null},\n                  {position: 5, hero: null},\n                  {position: 6, hero: null},\n                  {position: 7, hero: null},\n                  {position: 8, hero: null}*/\n      ],\n      heroTrickery: [/*\n                     {position: 0, hero: 'spray'}, \n                     {position: 1, hero: null}, \n                     {position: 2, hero: 'working'}, \n                     {position: 3, hero: 'exuberant'}, \n                     {position: 4, hero: 'destruction'}, \n                     {position: 5, hero: 'null'},\n                     {position: 6, hero: 'null'},\n                     {position: 7, hero: 'null'},\n                     {position: 8, hero: 'null'},*/\n      ],\n      enemyBoard: [/*\n                   {position: 0, hero: null},\n                   {position: 1, hero: 'null'},\n                   {position: 2, hero: 'null'},\n                   {position: 3, hero: 'null'},\n                   {position: 4, hero: 'null'},\n                   {position: 5, hero: 'null'},\n                   {position: 6, hero: 'null'},\n                   {position: 7, hero: 'null'},\n                   {position: 8, hero: 'null'},*/\n      ]\n    };\n\n    //console.log(allyBoard)\n  }\n\n  render() {\n    if (this.props.currentPick === 'enemy' && this.props.pickPhase === 'placing') {\n      this.handleEnemyPlacePick();\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Draft Pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.draftableHeroes.map(hero => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onHeroPick(hero),\n          className: \"btn m-2 btn-primary\",\n          children: hero.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: this.handlePlacePick,\n        board: this.state.allyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enemy Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: \"\" //what am i supposed to do here?\n        ,\n        board: this.state.enemyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default HeroList;","map":{"version":3,"names":["React","Grid","boardPositionData","HeroList","Component","constructor","props","componentDidMount","allyBoard","state","setState","enemyBoard","heroTrickery","handlePlacePick","place","pickPhase","index","allyHeroes","length","hero","onPlaced","handleEnemyPlacePick","enemyHeroes","enemyBoardIndex","console","log","filtered","filter","h","position","Math","floor","random","test","testFiltered","words","result","word","render","currentPick","draftableHeroes","map","onHeroPick","name"],"sources":["/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { arrayBuffer } from 'stream/consumers';\nimport { CardSchema } from '../data/cardSchema';\nimport Grid from './grid'\nimport { PickPhase } from '../components/pickPhase'\nimport { AnyARecord } from 'dns';\nimport { Team } from '../components/Team'\nimport { BoardPositionSchema } from '../data/boardPositionSchema';\nimport { boardPositionData } from '../data/boardPositionData';\n\n\ninterface Props {\n    draftableHeroes: CardSchema[],\n    draftableHeroesNames: String[],\n    draftableHeroKeyTest: String,\n    enemyHeroes: String[],\n    allyHeroes: String[],\n    onHeroPick: any, //MAKE SURE YOU GIVE THIS THE PROPER TYPE!\n    pickPhase: PickPhase,\n    currentPick: Team,\n    onPlaced: any\n  }\n\ninterface State {\n    allyBoard: BoardPositionSchema[]\n    heroTrickery: BoardPositionSchema[]\n        \n    \n    enemyBoard: BoardPositionSchema[]\n}\n\n\n\nclass HeroList extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n    this.state = {\n        allyBoard: [/*\n            {position: 0, hero: null},\n            {position: 1, hero: null},\n            {position: 2, hero: null},\n            {position: 3, hero: null},\n            {position: 4, hero: null},\n            {position: 5, hero: null},\n            {position: 6, hero: null},\n            {position: 7, hero: null},\n            {position: 8, hero: null}*/\n        ],\n        heroTrickery: [/*\n            {position: 0, hero: 'spray'}, \n            {position: 1, hero: null}, \n            {position: 2, hero: 'working'}, \n            {position: 3, hero: 'exuberant'}, \n            {position: 4, hero: 'destruction'}, \n            {position: 5, hero: 'null'},\n            {position: 6, hero: 'null'},\n            {position: 7, hero: 'null'},\n            {position: 8, hero: 'null'},*/\n        ],\n\n\n        enemyBoard: [/*\n            {position: 0, hero: null},\n            {position: 1, hero: 'null'},\n            {position: 2, hero: 'null'},\n            {position: 3, hero: 'null'},\n            {position: 4, hero: 'null'},\n            {position: 5, hero: 'null'},\n            {position: 6, hero: 'null'},\n            {position: 7, hero: 'null'},\n            {position: 8, hero: 'null'},*/\n        ]\n    }\n\n\n    //console.log(allyBoard)\n}\n\n    componentDidMount = () => {\n\n        let allyBoard = this.state.allyBoard\n        allyBoard = boardPositionData\n        this.setState({ allyBoard });\n        //console.log(allyBoard)\n\n        let enemyBoard = this.state.enemyBoard\n        enemyBoard = boardPositionData\n        this.setState({ enemyBoard });\n\n        let heroTrickery = this.state.heroTrickery\n        heroTrickery = boardPositionData\n        this.setState({ heroTrickery });\n\n\n    }\n\n    handlePlacePick = (place: any) => { //SHOULD CORRECTLY TYPE THIS\n        if (this.props.pickPhase === 'placing') { //need a handler in App.JSX that changes phase back to picking\n            let index = this.props.allyHeroes.length\n            let hero = this.props.allyHeroes[index -1]\n            \n            let allyBoard = [...this.state.allyBoard]\n            allyBoard[place].hero = hero\n            this.setState({ allyBoard })\n            \n            this.props.onPlaced() //ITERATING BETWEEN PLACING AND PICKING IS NOT WORKING\n\n        }\n        }\n\n    handleEnemyPlacePick = () => {\n        //EXPERIMENTAL\n            let index = this.props.enemyHeroes.length\n            let hero = this.props.enemyHeroes[index -1]\n            let enemyBoardIndex = [...this.state.enemyBoard]\n            console.log(enemyBoardIndex)\n            const filtered = enemyBoardIndex.filter(h => h.hero === '')\n            \n            console.log(filtered)\n            \n            let position = enemyBoardIndex[Math.floor(Math.random()*enemyBoardIndex.length)].position\n            let enemyBoard = [...this.state.enemyBoard]\n            enemyBoardIndex[position].hero = hero\n\n            let test = [...this.state.heroTrickery]\n            console.log(test)\n            let testFiltered = test.filter(h => h.hero == '')\n            console.log(testFiltered)\n\n            const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n\nconst result = words.filter(word => word.length > 6);\n\nconsole.log(result);\n// expected output: Array [\"exuberant\", \"destruction\", \"present\"]\n\n            \n\n        //EXPERIMENTAL\n\n/*\n            let index = this.props.enemyHeroes.length\n            let hero = this.props.enemyHeroes[index -1]\n            let place = Math.floor(Math.random()*8)\n            \n            let enemyBoard = [...this.state.enemyBoard]\n            console.log(enemyBoard[place])\n            if (enemyBoard[place].hero === null) {\n                enemyBoard[place].hero = hero\n            }\n            */\n            this.setState({ enemyBoard })\n            this.props.onPlaced()\n    }\n    \n\n    render() { \n        \n        \n        if (this.props.currentPick === 'enemy' && this.props.pickPhase === 'placing') {\n            this.handleEnemyPlacePick()\n            \n        }\n\n\n        return ( \n            <div>\n                <h1>Draft Pool</h1>\n                <div>\n                    {this.props.draftableHeroes.map(hero => (\n                        <button \n                            onClick={() => this.props.onHeroPick(hero)} \n                            className=\"btn m-2 btn-primary\">{hero.name}</button> \n                    ))}\n                </div>\n                <h1>Your Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick={this.handlePlacePick}\n                    board={this.state.allyBoard}\n                />\n                \n                <h1>Enemy Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick=\"\" //what am i supposed to do here?\n                    board={this.state.enemyBoard}\n                />  \n                \n            </div>\n        );\n    }\n}\n \nexport default HeroList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}