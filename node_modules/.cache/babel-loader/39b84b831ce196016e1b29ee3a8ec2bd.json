{"ast":null,"code":"var _jsxFileName = \"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx\";\nimport * as React from 'react';\nimport Grid from './grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeroList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePlacePick = place => {\n      //SHOULD CORRECTLY TYPE THIS\n      if (this.props.pickPhase === 'placing') {\n        let index = this.props.allyHeroes.length;\n        let hero = this.props.allyHeroes[index - 1];\n        let allyBoard = [...this.state.allyBoard];\n        allyBoard[place].hero = hero;\n        console.log(hero);\n        this.setState({\n          allyBoard\n        });\n      }\n    };\n    this.state = {\n      allyBoard: [{\n        position: 0,\n        hero: 'fireMage'\n      }, {\n        position: 1,\n        hero: null\n      }, {\n        position: 2,\n        hero: null\n      }, {\n        position: 3,\n        hero: null\n      }, {\n        position: 4,\n        hero: null\n      }, {\n        position: 5,\n        hero: null\n      }, {\n        position: 6,\n        hero: null\n      }, {\n        position: 7,\n        hero: null\n      }, {\n        position: 8,\n        hero: null\n      }],\n      enemyBoard: [{\n        position: 0,\n        hero: null\n      }, {\n        position: 1,\n        hero: null\n      }, {\n        position: 2,\n        hero: null\n      }, {\n        position: 3,\n        hero: null\n      }, {\n        position: 4,\n        hero: null\n      }, {\n        position: 5,\n        hero: null\n      }, {\n        position: 6,\n        hero: null\n      }, {\n        position: 7,\n        hero: null\n      }, {\n        position: 8,\n        hero: null\n      }]\n    };\n  }\n  render() {\n    //let heroList: Hero[] = heroRoster._heroes THIS IS WHAT IM GOING FOR\n    const {\n      allyHeroes,\n      enemyHeroes\n    } = this.props;\n    let allyStringTest = ['berserker', 'warrior', 'archer'];\n    let enemyStringTest = ['badHero', 'youchas', 'darkKnight'];\n    let pick = this.props.draftableHeroes;\n    //console.log(this.props.draftableHeroes)\n    let testStringArray = ['one', 'two', 'three'];\n    let testObjectArray = [{\n      one: 1\n    }, {\n      two: 2\n    }, {\n      three: 3\n    }, {\n      four: 4\n    }];\n\n    //let draftableHeroes = this.props.draftableHeroes\n    //draftableHeroes = heroRoster._heroes\n    //this.setState({ draftableHeroes });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Draft Pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.draftableHeroes.map(hero => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onHeroPick(hero),\n          className: \"btn m-2 btn-primary\",\n          children: hero.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: this.handlePlacePick,\n        allyBoard: this.state.allyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.allyHeroes.map(hero => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn m-2 btn-primary\",\n          children: hero\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enemy Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: this.handlePlacePick,\n        enemyBoard: this.state.allyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.enemyHeroes.map(hero => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn m-2 btn-primary\",\n          children: hero\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default HeroList;","map":{"version":3,"names":["React","Grid","HeroList","Component","constructor","props","handlePlacePick","place","pickPhase","index","allyHeroes","length","hero","allyBoard","state","console","log","setState","position","enemyBoard","render","enemyHeroes","allyStringTest","enemyStringTest","pick","draftableHeroes","testStringArray","testObjectArray","one","two","three","four","map","onHeroPick","name"],"sources":["/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { arrayBuffer } from 'stream/consumers';\nimport { CardSchema } from '../data/cardSchema';\nimport Grid from './grid'\nimport { PickPhase } from '../components/pickPhase'\nimport { AnyARecord } from 'dns';\n\n\ninterface Props {\n    draftableHeroes: CardSchema[],\n    draftableHeroesNames: String[],\n    draftableHeroKeyTest: String,\n    enemyHeroes: String[],\n    allyHeroes: String[],\n    onHeroPick: any, //MAKE SURE YOU GIVE THIS THE PROPER TYPE!\n    pickPhase: PickPhase\n  }\n\ninterface State {\n    allyBoard: any/*[\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n    ]\n    */\n    enemyBoard: [        \n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n        {position: number, hero: String | null},\n    ]\n}\n\n\n\nclass HeroList extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n    this.state = {\n        allyBoard: [\n            {position: 0, hero: 'fireMage'},\n            {position: 1, hero: null},\n            {position: 2, hero: null},\n            {position: 3, hero: null},\n            {position: 4, hero: null},\n            {position: 5, hero: null},\n            {position: 6, hero: null},\n            {position: 7, hero: null},\n            {position: 8, hero: null}\n        ],\n        enemyBoard: [\n            {position: 0, hero: null},\n            {position: 1, hero: null},\n            {position: 2, hero: null},\n            {position: 3, hero: null},\n            {position: 4, hero: null},\n            {position: 5, hero: null},\n            {position: 6, hero: null},\n            {position: 7, hero: null},\n            {position: 8, hero: null},\n        ]\n    }\n}\n\n    handlePlacePick = (place: any) => { //SHOULD CORRECTLY TYPE THIS\n        if (this.props.pickPhase === 'placing') {\n            let index = this.props.allyHeroes.length\n            let hero = this.props.allyHeroes[index -1]\n            \n            let allyBoard = [...this.state.allyBoard]\n            allyBoard[place].hero = hero\n            console.log(hero)\n            this.setState({ allyBoard })\n\n\n        }\n        }\n    \n\n    render() { \n\n        //let heroList: Hero[] = heroRoster._heroes THIS IS WHAT IM GOING FOR\n        const { allyHeroes, enemyHeroes} = this.props\n        let allyStringTest: string[] = ['berserker', 'warrior', 'archer']\n        let enemyStringTest: string[] = ['badHero', 'youchas', 'darkKnight']\n        let pick = this.props.draftableHeroes\n        //console.log(this.props.draftableHeroes)\n        let testStringArray: String[] = ['one', 'two', 'three']\n        let testObjectArray: Object[] = [{one: 1}, {two: 2}, {three: 3}, {four: 4}]\n\n        //let draftableHeroes = this.props.draftableHeroes\n        //draftableHeroes = heroRoster._heroes\n        //this.setState({ draftableHeroes });\n        \n\n\n\n\n\n\n        return ( \n            <div>\n                <h1>Draft Pool</h1>\n                <div>\n                    {this.props.draftableHeroes.map(hero => (\n                        <button \n                            onClick={() => this.props.onHeroPick(hero)} \n                            className=\"btn m-2 btn-primary\">{hero.name}</button> \n                    ))}\n                </div>\n                <h1>Your Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick={this.handlePlacePick}\n                    allyBoard={this.state.allyBoard}\n                />\n                <div>\n                    {this.props.allyHeroes.map(hero => (\n                        <button className=\"btn m-2 btn-primary\">{hero}</button> \n                    ))}\n                </div>\n                \n                <h1>Enemy Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick={this.handlePlacePick}\n                    enemyBoard={this.state.allyBoard}\n                />  \n                \n                <div>\n                    {this.props.enemyHeroes.map(hero => (\n                        <button className=\"btn m-2 btn-primary\">{hero}</button> \n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default HeroList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}