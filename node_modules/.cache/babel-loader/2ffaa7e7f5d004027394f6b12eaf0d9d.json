{"ast":null,"code":"import { heroRoster } from \"../components/heroRoster\";\n\n//this version is for when/if I switch to Joel's hero data structure\n/*export function heroQuery(heroName: any) { \n    let hero \n    heroData.forEach(\n      h => {\n        if (h.key === heroName) {\n          hero = h\n          //console.log(hero)\n        }\n      }\n    )\n    return hero\n}*/\n\nexport function heroQuery(heroName) {\n  let hero;\n  heroRoster._heroes.forEach(h => {\n    if (h._name === heroName) {\n      hero = h;\n      //console.log(hero)\n    }\n  });\n\n  return hero;\n}","map":{"version":3,"names":["heroRoster","heroQuery","heroName","hero","_heroes","forEach","h","_name"],"sources":["/Users/j980m842/Documents/Development/bsv-draft-ai/src/utilities/heroQuery.ts"],"sourcesContent":["import { heroData } from \"../data/heroData\"\nimport { heroRoster } from \"../components/heroRoster\"\n\n//this version is for when/if I switch to Joel's hero data structure\n/*export function heroQuery(heroName: any) { \n    let hero \n    heroData.forEach(\n      h => {\n        if (h.key === heroName) {\n          hero = h\n          //console.log(hero)\n        }\n      }\n    )\n    return hero\n}*/\n\nexport function heroQuery(heroName: any) { \n    let hero \n    heroRoster._heroes.forEach(\n      h => {\n        if (h._name === heroName) {\n          hero = h\n          //console.log(hero)\n        }\n      }\n    )\n    return hero\n}"],"mappings":"AACA,SAASA,UAAU,QAAQ,0BAA0B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAAS,CAACC,QAAa,EAAE;EACrC,IAAIC,IAAI;EACRH,UAAU,CAACI,OAAO,CAACC,OAAO,CACxBC,CAAC,IAAI;IACH,IAAIA,CAAC,CAACC,KAAK,KAAKL,QAAQ,EAAE;MACxBC,IAAI,GAAGG,CAAC;MACR;IACF;EACF,CAAC,CACF;;EACD,OAAOH,IAAI;AACf"},"metadata":{},"sourceType":"module"}