{"ast":null,"code":"var _jsxFileName = \"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/gameState.tsx\";\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GameState extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      gameStateReadOut: \"Start Draft\"\n    };\n    this.gameStateFormatter = () => {\n      if (this.state.gameStateReadOut == '10') {\n        return \"draft \";\n      }\n      let readOut = this.state.gameStateReadOut;\n      return readOut;\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.draftSequenceIndex !== this.props.draftSequenceIndex) {\n      //TRYING TO FIGURE OUT HOW TO UPDATE THIS.STATE.GAMESTATEREADOUT EACH TIME THERE IS A CHANGE IN THE DRAFT SEQUENCE INDEX PROP, OVERALL I WANT A WAY TO TRACK THE PHASE IM IN AND CHANGE WHAT IS GOING ON BASED ON THAT\n      let gameStateToString = this.props.draftSequenceIndex;\n      let gameStateReadOut = gameStateToString.toString();\n      this.setState({\n        gameStateReadOut\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: this.gameStateFormatter()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default GameState;","map":{"version":3,"names":["React","GameState","Component","state","gameStateReadOut","gameStateFormatter","readOut","componentDidUpdate","prevProps","draftSequenceIndex","props","gameStateToString","toString","setState","render"],"sources":["/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/gameState.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\n\ninterface Props {\n    draftSequenceIndex: number\n}\n \ninterface State {\n    gameStateReadOut: String\n}\n \nclass GameState extends React.Component<Props, State> {\n    state = {\n        gameStateReadOut: \"Start Draft\"\n    }\n\n componentDidUpdate(prevProps: any): any {\n    if (prevProps.draftSequenceIndex !== this.props.draftSequenceIndex) {//TRYING TO FIGURE OUT HOW TO UPDATE THIS.STATE.GAMESTATEREADOUT EACH TIME THERE IS A CHANGE IN THE DRAFT SEQUENCE INDEX PROP, OVERALL I WANT A WAY TO TRACK THE PHASE IM IN AND CHANGE WHAT IS GOING ON BASED ON THAT\n        let gameStateToString = this.props.draftSequenceIndex\n        let gameStateReadOut = gameStateToString.toString()\n\n        this.setState({ gameStateReadOut })\n    }\n}  \n\ngameStateFormatter = () => {\n   \n    if (this.state.gameStateReadOut == '10') {\n        return \"draft \"\n    }\n    let readOut: String = this.state.gameStateReadOut\n    \n\n    \n    return readOut\n\n}\n\n\n\n\n\n    render() { \n\n\n        return ( \n            <h1>{this.gameStateFormatter()}</h1>\n            \n            \n         );\n    }\n}\n \nexport default GameState;"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAW/B,MAAMC,SAAS,SAASD,KAAK,CAACE,SAAS,CAAe;EAAA;IAAA;IAAA,KAClDC,KAAK,GAAG;MACJC,gBAAgB,EAAE;IACtB,CAAC;IAAA,KAWLC,kBAAkB,GAAG,MAAM;MAEvB,IAAI,IAAI,CAACF,KAAK,CAACC,gBAAgB,IAAI,IAAI,EAAE;QACrC,OAAO,QAAQ;MACnB;MACA,IAAIE,OAAe,GAAG,IAAI,CAACH,KAAK,CAACC,gBAAgB;MAIjD,OAAOE,OAAO;IAElB,CAAC;EAAA;EApBAC,kBAAkB,CAACC,SAAc,EAAO;IACrC,IAAIA,SAAS,CAACC,kBAAkB,KAAK,IAAI,CAACC,KAAK,CAACD,kBAAkB,EAAE;MAAC;MACjE,IAAIE,iBAAiB,GAAG,IAAI,CAACD,KAAK,CAACD,kBAAkB;MACrD,IAAIL,gBAAgB,GAAGO,iBAAiB,CAACC,QAAQ,EAAE;MAEnD,IAAI,CAACC,QAAQ,CAAC;QAAET;MAAiB,CAAC,CAAC;IACvC;EACJ;EAmBIU,MAAM,GAAG;IAGL,oBACI;MAAA,UAAK,IAAI,CAACT,kBAAkB;IAAE;MAAA;MAAA;MAAA;IAAA,QAAM;EAI5C;AACJ;AAEA,eAAeJ,SAAS"},"metadata":{},"sourceType":"module"}