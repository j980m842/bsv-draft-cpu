{"ast":null,"code":"var _jsxFileName = \"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx\";\nimport * as React from 'react';\nimport Grid from './grid';\nimport { boardPositionData } from '../data/boardPositionData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeroList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePlacePick = place => {\n      //SHOULD CORRECTLY TYPE THIS\n      if (this.props.pickPhase === 'placing') {\n        //need a handler in App.JSX that changes phase back to picking\n        let index = this.props.allyHeroes.length;\n        let hero = this.props.allyHeroes[index - 1];\n        let allyBoard = [...this.state.allyBoard];\n        allyBoard[place].hero = hero;\n        this.setState({\n          allyBoard\n        });\n        this.props.onPlaced(); //ITERATING BETWEEN PLACING AND PICKING IS NOT WORKING\n      }\n    };\n    this.handleEnemyPlacePick = () => {\n      //EXPERIMENTAL\n      let index = this.props.enemyHeroes.length;\n      let hero = this.props.enemyHeroes[index - 1];\n      let enemyBoardIndex = [...this.state.enemyBoard];\n      //console.log(enemyBoardIndex)\n      const filtered = enemyBoardIndex.filter(h => h.hero === '');\n\n      // console.log(filtered)\n\n      let position = enemyBoardIndex[Math.floor(Math.random() * enemyBoardIndex.length)].position;\n      let enemyBoard = [...this.state.enemyBoard];\n      enemyBoardIndex[position].hero = hero;\n      /*\n                  let test = [...this.state.heroTrickery]\n                  console.log(test)\n                  let testFiltered = test.filter(h => h.hero === '')\n                  console.log(testFiltered)*/\n      /*\n                  let hTest: {position: number, hero: String | null }[] = [\n                      {position: 0, hero: 'spray'}, \n                      {position: 1, hero: null}, \n                      {position: 2, hero: 'working'}, \n                      {position: 3, hero: 'exuberant'}, \n                      {position: 4, hero: 'destruction'}, \n                      {position: 5, hero: null},\n                      {position: 6, hero: 'null'},\n                      {position: 7, hero: null},\n                      {position: 8, hero: 'null'},\n                  ]\n                  */\n\n      let hTest = boardPositionData;\n      let result = hTest.filter(h => h.hero == '');\n      console.log('filtered: ');\n      console.log(result);\n\n      //EXPERIMENTAL\n\n      /*\n                  let index = this.props.enemyHeroes.length\n                  let hero = this.props.enemyHeroes[index -1]\n                  let place = Math.floor(Math.random()*8)\n                  \n                  let enemyBoard = [...this.state.enemyBoard]\n                  console.log(enemyBoard[place])\n                  if (enemyBoard[place].hero === null) {\n                      enemyBoard[place].hero = hero\n                  }\n                  */\n      this.setState({\n        enemyBoard\n      });\n      this.props.onPlaced();\n    };\n    this.state = {\n      allyBoard: [{\n        position: 0,\n        hero: ''\n      }, {\n        position: 1,\n        hero: ''\n      }, {\n        position: 2,\n        hero: ''\n      }, {\n        position: 3,\n        hero: ''\n      }, {\n        position: 4,\n        hero: ''\n      }, {\n        position: 5,\n        hero: ''\n      }, {\n        position: 6,\n        hero: ''\n      }, {\n        position: 7,\n        hero: ''\n      }, {\n        position: 8,\n        hero: ''\n      }],\n      heroTrickery: [/*\n                     {position: 0, hero: 'spray'}, \n                     {position: 1, hero: null}, \n                     {position: 2, hero: 'working'}, \n                     {position: 3, hero: 'exuberant'}, \n                     {position: 4, hero: 'destruction'}, \n                     {position: 5, hero: 'null'},\n                     {position: 6, hero: 'null'},\n                     {position: 7, hero: 'null'},\n                     {position: 8, hero: 'null'},*/\n      ],\n      enemyBoard: [{\n        position: 0,\n        hero: ''\n      }, {\n        position: 1,\n        hero: ''\n      }, {\n        position: 2,\n        hero: ''\n      }, {\n        position: 3,\n        hero: ''\n      }, {\n        position: 4,\n        hero: ''\n      }, {\n        position: 5,\n        hero: ''\n      }, {\n        position: 6,\n        hero: ''\n      }, {\n        position: 7,\n        hero: ''\n      }, {\n        position: 8,\n        hero: ''\n      }]\n    };\n\n    //console.log(allyBoard)\n  }\n\n  render() {\n    if (this.props.currentPick === 'enemy' && this.props.pickPhase === 'placing') {\n      this.handleEnemyPlacePick();\n    }\n    console.log(this.state.allyBoard);\n    console.log(this.state.enemyBoard);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Draft Pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.draftableHeroes.map(hero => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onHeroPick(hero),\n          className: \"btn m-2 btn-primary\",\n          children: hero.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: this.handlePlacePick,\n        board: this.state.allyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enemy Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: \"\" //what am i supposed to do here?\n        ,\n        board: this.state.enemyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default HeroList;","map":{"version":3,"names":["React","Grid","boardPositionData","HeroList","Component","constructor","props","handlePlacePick","place","pickPhase","index","allyHeroes","length","hero","allyBoard","state","setState","onPlaced","handleEnemyPlacePick","enemyHeroes","enemyBoardIndex","enemyBoard","filtered","filter","h","position","Math","floor","random","hTest","result","console","log","heroTrickery","render","currentPick","draftableHeroes","map","onHeroPick","name"],"sources":["/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { arrayBuffer } from 'stream/consumers';\nimport { CardSchema } from '../data/cardSchema';\nimport Grid from './grid'\nimport { PickPhase } from '../components/pickPhase'\nimport { AnyARecord } from 'dns';\nimport { Team } from '../components/Team'\nimport { BoardPositionSchema } from '../data/boardPositionSchema';\nimport { boardPositionData } from '../data/boardPositionData';\nimport { heroData } from '../data/heroData';\n\n\ninterface Props {\n    draftableHeroes: CardSchema[],\n    draftableHeroesNames: String[],\n    draftableHeroKeyTest: String,\n    enemyHeroes: String[],\n    allyHeroes: String[],\n    onHeroPick: any, //MAKE SURE YOU GIVE THIS THE PROPER TYPE!\n    pickPhase: PickPhase,\n    currentPick: Team,\n    onPlaced: any\n  }\n\ninterface State {\n    allyBoard: BoardPositionSchema[]\n    heroTrickery: BoardPositionSchema[]\n        \n    \n    enemyBoard: BoardPositionSchema[]\n}\n\n\n\nclass HeroList extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n    this.state = {\n        allyBoard: [\n            {position: 0, hero: ''},\n            {position: 1, hero: ''},\n            {position: 2, hero: ''},\n            {position: 3, hero: ''},\n            {position: 4, hero: ''},\n            {position: 5, hero: ''},\n            {position: 6, hero: ''},\n            {position: 7, hero: ''},\n            {position: 8, hero: ''}\n        ],\n        heroTrickery: [/*\n            {position: 0, hero: 'spray'}, \n            {position: 1, hero: null}, \n            {position: 2, hero: 'working'}, \n            {position: 3, hero: 'exuberant'}, \n            {position: 4, hero: 'destruction'}, \n            {position: 5, hero: 'null'},\n            {position: 6, hero: 'null'},\n            {position: 7, hero: 'null'},\n            {position: 8, hero: 'null'},*/\n        ],\n\n\n        enemyBoard: [\n            {position: 0, hero: ''},\n            {position: 1, hero: ''},\n            {position: 2, hero: ''},\n            {position: 3, hero: ''},\n            {position: 4, hero: ''},\n            {position: 5, hero: ''},\n            {position: 6, hero: ''},\n            {position: 7, hero: ''},\n            {position: 8, hero: ''}\n        ]\n    }\n\n\n    //console.log(allyBoard)\n}\n\n    handlePlacePick = (place: any) => { //SHOULD CORRECTLY TYPE THIS\n        if (this.props.pickPhase === 'placing') { //need a handler in App.JSX that changes phase back to picking\n            let index = this.props.allyHeroes.length\n            let hero = this.props.allyHeroes[index -1]\n            \n            let allyBoard = [...this.state.allyBoard]\n            allyBoard[place].hero = hero\n            this.setState({ allyBoard })\n            \n            this.props.onPlaced() //ITERATING BETWEEN PLACING AND PICKING IS NOT WORKING\n\n        }\n        }\n\n    handleEnemyPlacePick = () => {\n        //EXPERIMENTAL\n            let index = this.props.enemyHeroes.length\n            let hero = this.props.enemyHeroes[index -1]\n            let enemyBoardIndex = [...this.state.enemyBoard]\n            //console.log(enemyBoardIndex)\n            const filtered = enemyBoardIndex.filter(h => h.hero === '')\n            \n           // console.log(filtered)\n            \n            let position = enemyBoardIndex[Math.floor(Math.random()*enemyBoardIndex.length)].position\n            let enemyBoard = [...this.state.enemyBoard]\n            enemyBoardIndex[position].hero = hero\n/*\n            let test = [...this.state.heroTrickery]\n            console.log(test)\n            let testFiltered = test.filter(h => h.hero === '')\n            console.log(testFiltered)*/\n/*\n            let hTest: {position: number, hero: String | null }[] = [\n                {position: 0, hero: 'spray'}, \n                {position: 1, hero: null}, \n                {position: 2, hero: 'working'}, \n                {position: 3, hero: 'exuberant'}, \n                {position: 4, hero: 'destruction'}, \n                {position: 5, hero: null},\n                {position: 6, hero: 'null'},\n                {position: 7, hero: null},\n                {position: 8, hero: 'null'},\n            ]\n            */\n\n            let hTest = boardPositionData\n            let result = hTest.filter(h => h.hero == '');\n            console.log('filtered: ')\n            console.log(result);\n\n            \n\n        //EXPERIMENTAL\n\n/*\n            let index = this.props.enemyHeroes.length\n            let hero = this.props.enemyHeroes[index -1]\n            let place = Math.floor(Math.random()*8)\n            \n            let enemyBoard = [...this.state.enemyBoard]\n            console.log(enemyBoard[place])\n            if (enemyBoard[place].hero === null) {\n                enemyBoard[place].hero = hero\n            }\n            */\n            this.setState({ enemyBoard })\n            this.props.onPlaced()\n    }\n    \n\n    render() { \n        \n        \n        if (this.props.currentPick === 'enemy' && this.props.pickPhase === 'placing') {\n            this.handleEnemyPlacePick()\n            \n        }\n        console.log(this.state.allyBoard)\n        console.log(this.state.enemyBoard)\n\n        return ( \n            <div>\n                <h1>Draft Pool</h1>\n                <div>\n                    {this.props.draftableHeroes.map(hero => (\n                        <button \n                            onClick={() => this.props.onHeroPick(hero)} \n                            className=\"btn m-2 btn-primary\">{hero.name}</button> \n                    ))}\n                </div>\n                <h1>Your Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick={this.handlePlacePick}\n                    board={this.state.allyBoard}\n                />\n                \n                <h1>Enemy Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick=\"\" //what am i supposed to do here?\n                    board={this.state.enemyBoard}\n                />  \n                \n            </div>\n        );\n    }\n}\n \nexport default HeroList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}