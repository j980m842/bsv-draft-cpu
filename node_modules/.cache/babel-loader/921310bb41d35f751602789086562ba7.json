{"ast":null,"code":"var _jsxFileName = \"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx\";\nimport * as React from 'react';\nimport Grid from './grid';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeroList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePlacePick = place => {\n      //SHOULD CORRECTLY TYPE THIS\n      if (this.props.pickPhase === 'placing') {\n        //need a handler in App.JSX that changes phase back to picking\n        let index = this.props.allyHeroes.length;\n        let hero = this.props.allyHeroes[index - 1];\n        let allyBoard = [...this.state.allyBoard];\n        allyBoard[place].hero = hero;\n        this.setState({\n          allyBoard\n        });\n        this.props.onPlaced();\n      }\n    };\n    this.handleEnemyPlacePick = () => {\n      let index = this.props.enemyHeroes.length;\n      let hero = this.props.enemyHeroes[index - 1];\n      let enemyBoardIndex = cloneDeep(this.state.enemyBoard);\n      let emptyPositions = enemyBoardIndex.filter(h => h.hero === '');\n      let position = emptyPositions[Math.floor(Math.random() * emptyPositions.length)].position;\n      let enemyBoard = [...this.state.enemyBoard];\n      enemyBoard[position].hero = hero;\n      this.setState({\n        enemyBoard\n      });\n      this.props.onPlaced();\n    };\n    this.handleMoveInitialized = () => {\n      console.log(\"move it! handler activated...\");\n      this.props.onMoveInitialized();\n    };\n    this.handleMoveCompleted = (positionInitial, positionFinal) => {\n      console.log(\"handle move completed activated\");\n      let selected;\n    };\n    this.state = {\n      allyBoard: [{\n        position: 0,\n        hero: ''\n      }, {\n        position: 1,\n        hero: ''\n      }, {\n        position: 2,\n        hero: ''\n      }, {\n        position: 3,\n        hero: ''\n      }, {\n        position: 4,\n        hero: ''\n      }, {\n        position: 5,\n        hero: ''\n      }, {\n        position: 6,\n        hero: ''\n      }, {\n        position: 7,\n        hero: ''\n      }, {\n        position: 8,\n        hero: ''\n      }],\n      enemyBoard: [{\n        position: 0,\n        hero: ''\n      }, {\n        position: 1,\n        hero: ''\n      }, {\n        position: 2,\n        hero: ''\n      }, {\n        position: 3,\n        hero: ''\n      }, {\n        position: 4,\n        hero: ''\n      }, {\n        position: 5,\n        hero: ''\n      }, {\n        position: 6,\n        hero: ''\n      }, {\n        position: 7,\n        hero: ''\n      }, {\n        position: 8,\n        hero: ''\n      }],\n      selectedPosition: {\n        position: 11,\n        hero: ''\n      }\n    };\n  }\n  render() {\n    if (this.props.currentPick === 'enemy' && this.props.pickPhase === 'placing') {\n      this.handleEnemyPlacePick();\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Draft Pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.draftableHeroes.map(hero => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onHeroPick(hero),\n          className: \"btn m-2 btn-primary\",\n          children: hero.name\n        }, hero.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: this.handlePlacePick,\n        onMoveInitialized: this.handleMoveInitialized,\n        onMoveCompleted: this.handleMoveCompleted,\n        board: this.state.allyBoard,\n        gamePhase: this.props.gamePhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enemy Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        pickPhase: this.props.pickPhase,\n        onPlacePick: \"\" //what am i supposed to do here?\n        ,\n        onMoveInitialized: this.handleMoveInitialized,\n        onMoveCompleted: this.handleMoveCompleted,\n        board: this.state.enemyBoard,\n        gamePhase: this.props.gamePhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default HeroList;","map":{"version":3,"names":["React","Grid","cloneDeep","HeroList","Component","constructor","props","handlePlacePick","place","pickPhase","index","allyHeroes","length","hero","allyBoard","state","setState","onPlaced","handleEnemyPlacePick","enemyHeroes","enemyBoardIndex","enemyBoard","emptyPositions","filter","h","position","Math","floor","random","handleMoveInitialized","console","log","onMoveInitialized","handleMoveCompleted","positionInitial","positionFinal","selected","selectedPosition","render","currentPick","draftableHeroes","map","onHeroPick","name","key","gamePhase"],"sources":["/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { arrayBuffer } from 'stream/consumers';\nimport { CardSchema } from '../data/cardSchema';\nimport Grid from './grid'\nimport { PickPhase } from '../components/pickPhase'\nimport { AnyARecord } from 'dns';\nimport { Team } from '../components/Team'\nimport { BoardPositionSchema } from '../data/boardPositionSchema';\nimport { boardPositionData } from '../data/boardPositionData';\nimport { heroData } from '../data/heroData';\nimport cloneDeep from 'lodash/cloneDeep';\nimport GameState from './gameState';\nimport { GamePhase } from '../components/gamePhase'\n\ninterface Props {\n    draftableHeroes: CardSchema[],\n    draftableHeroesNames: String[],\n    draftableHeroKeyTest: String,\n    enemyHeroes: String[],\n    allyHeroes: String[],\n    onHeroPick: any, //MAKE SURE YOU GIVE THIS THE PROPER TYPE!\n    pickPhase: PickPhase,\n    currentPick: Team,\n    onPlaced: any\n    gamePhase: GamePhase\n    onMoveInitialized: any\n  }\n\ninterface State {\n    allyBoard: BoardPositionSchema[]\n    enemyBoard: BoardPositionSchema[]\n    selectedPosition: BoardPositionSchema\n}\n\n\n\nclass HeroList extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n    this.state = {\n        allyBoard: [\n            {position: 0, hero: ''},\n            {position: 1, hero: ''},\n            {position: 2, hero: ''},\n            {position: 3, hero: ''},\n            {position: 4, hero: ''},\n            {position: 5, hero: ''},\n            {position: 6, hero: ''},\n            {position: 7, hero: ''},\n            {position: 8, hero: ''}\n        ],\n\n\n        enemyBoard: [\n            {position: 0, hero: ''},\n            {position: 1, hero: ''},\n            {position: 2, hero: ''},\n            {position: 3, hero: ''},\n            {position: 4, hero: ''},\n            {position: 5, hero: ''},\n            {position: 6, hero: ''},\n            {position: 7, hero: ''},\n            {position: 8, hero: ''}\n        ],\n\n        selectedPosition: {position: 11, hero: ''}\n    }\n\n\n}\n\n    handlePlacePick = (place: any) => { //SHOULD CORRECTLY TYPE THIS\n        if (this.props.pickPhase === 'placing') { //need a handler in App.JSX that changes phase back to picking\n            let index = this.props.allyHeroes.length\n            let hero = this.props.allyHeroes[index -1]\n            \n            let allyBoard = [...this.state.allyBoard]\n            allyBoard[place].hero = hero\n            this.setState({ allyBoard })\n            \n            this.props.onPlaced() \n\n        }\n        }\n\n    handleEnemyPlacePick = () => {\n  \n            let index = this.props.enemyHeroes.length\n            let hero = this.props.enemyHeroes[index -1]\n            let enemyBoardIndex = cloneDeep(this.state.enemyBoard)\n            let emptyPositions = enemyBoardIndex.filter(h => h.hero === '')\n            \n            let position = emptyPositions[Math.floor(Math.random()*emptyPositions.length)].position\n            let enemyBoard = [...this.state.enemyBoard]\n            enemyBoard[position].hero = hero\n          \n            this.setState({ enemyBoard })\n            this.props.onPlaced()\n    }\n\n    handleMoveInitialized = () => {\n        console.log(\"move it! handler activated...\")\n        this.props.onMoveInitialized()\n\n    }\n\n    handleMoveCompleted = (positionInitial, positionFinal) => {\n        console.log(\"handle move completed activated\")\n        let selected\n\n    }\n\n   \n    \n\n    render() { \n        \n        if (this.props.currentPick === 'enemy' && this.props.pickPhase === 'placing') {\n            this.handleEnemyPlacePick()\n            \n        }\n\n        return ( \n            <div>\n                <h1>Draft Pool</h1>\n                <div>\n                    {this.props.draftableHeroes.map(hero => (\n                        <button \n                            key={hero.key}\n                            onClick={() => this.props.onHeroPick(hero)} \n                            className=\"btn m-2 btn-primary\">{hero.name}</button> \n                    ))}\n                </div>\n                <h1>Your Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick={this.handlePlacePick}\n                    onMoveInitialized={this.handleMoveInitialized}\n                    onMoveCompleted={this.handleMoveCompleted}\n                    board={this.state.allyBoard}\n                    gamePhase={this.props.gamePhase}\n                />\n                \n                <h1>Enemy Team</h1>\n                <Grid\n                    pickPhase={this.props.pickPhase}\n                    onPlacePick=\"\" //what am i supposed to do here?\n                    onMoveInitialized={this.handleMoveInitialized}\n                    onMoveCompleted={this.handleMoveCompleted}\n                    board={this.state.enemyBoard}\n                    gamePhase={this.props.gamePhase}\n                />  \n                \n            </div>\n        );\n    }\n}\n \nexport default HeroList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}