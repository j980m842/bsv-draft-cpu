[{"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/index.tsx":"1","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reportWebVitals.ts":"2","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/App.tsx":"3","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/pickSequence.ts":"4","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/executeDraft.ts":"5","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/utilities/heroQuery.ts":"6","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/data/heroData.ts":"7","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx":"8","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/draftSystem.ts":"9","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/grid.tsx":"10","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/heroRoster.ts":"11","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/updateDraftRoster.ts":"12","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/armorSort.ts":"13","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/startingPriority.ts":"14","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Heroes.ts":"15","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Hero.ts":"16","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/data/boardPositionData.ts":"17"},{"size":593,"mtime":1668023517020,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1667330412150,"results":"20","hashOfConfig":"19"},{"size":4582,"mtime":1668448400375,"results":"21","hashOfConfig":"19"},{"size":505,"mtime":1668024450505,"results":"22","hashOfConfig":"19"},{"size":728,"mtime":1667357721761,"results":"23","hashOfConfig":"19"},{"size":208,"mtime":1668012626471,"results":"24","hashOfConfig":"19"},{"size":4636,"mtime":1668011752430,"results":"25","hashOfConfig":"19"},{"size":6550,"mtime":1668456332906,"results":"26","hashOfConfig":"19"},{"size":3182,"mtime":1668012702206,"results":"27","hashOfConfig":"19"},{"size":2731,"mtime":1668449025625,"results":"28","hashOfConfig":"19"},{"size":559,"mtime":1667333890904,"results":"29","hashOfConfig":"19"},{"size":264,"mtime":1667333919563,"results":"30","hashOfConfig":"19"},{"size":672,"mtime":1667333936634,"results":"31","hashOfConfig":"19"},{"size":170,"mtime":1667333919436,"results":"32","hashOfConfig":"19"},{"size":750,"mtime":1667333890847,"results":"33","hashOfConfig":"19"},{"size":799,"mtime":1667333890778,"results":"34","hashOfConfig":"19"},{"size":580,"mtime":1668453697613,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f83h7b",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/index.tsx",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reportWebVitals.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/App.tsx",["91"],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/pickSequence.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/executeDraft.ts",["92","93","94","95","96","97","98","99"],[],"import { Hero } from \"./Hero\";\nimport { Heroes } from \"./Heroes\";\nimport { heroRoster } from \"./heroRoster\";\nimport { updateDraftRoster } from \"./updateDraftRoster\";\nimport { Team } from \"./Team\";\nimport { startingPriority } from \"./startingPriority\";\nimport { pickSequence } from \"./pickSequence\";\nimport { armorSort } from \"./armorSort\";\nimport { draft, userHeroes, aIHeroes } from \"./draftSystem\";\n\nexport function executeDraft() {\n\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\n\nconsole.log(\"user's team is \")\nconsole.log(userHeroes)\nconsole.log(\"AI's team is \")\nconsole.log(aIHeroes)\n\nlet drafted = {\n    userHeroes: userHeroes,\n    aIHeroes: aIHeroes\n}\n\n    return drafted\n\n};\n\n","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/utilities/heroQuery.ts",["100"],[],"import { heroData } from \"../data/heroData\"\nimport { CardSchema } from '../data/cardSchema';\n\n\nexport function heroQuery(hero: String) {\n    let result = heroData.find(h => h.key === hero)\n    return result\n}","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/data/heroData.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx",["101","102","103","104","105","106"],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/draftSystem.ts",["107","108","109","110"],[],"import { Hero } from \"./Hero\";\nimport { Heroes } from \"./Heroes\";\nimport { heroRoster } from \"./heroRoster\";\nimport { updateDraftRoster } from \"./updateDraftRoster\";\nimport { Team } from \"./Team\";\nimport { startingPriority } from \"./startingPriority\";\nimport { pickSequence } from \"./pickSequence\";\nimport { armorSort } from \"./armorSort\";\n\n\n\nlet draftRoster: Array<Hero> = updateDraftRoster()\n//SORTING FUNCTIONS WORKING!!\nlet armorSorted: Array<Hero> = armorSort();\nlet highestArmor: Array<Hero> = armorSorted.filter(tied => tied._armor === armorSorted[0]._armor)\n//console.log(highestArmor)\n\n\nlet healthSorted: Array<Hero> = heroRoster.healthSort();\nlet highestHealth: Array<Hero> = healthSorted.filter(tied => tied._health === healthSorted[0]._health)\nexport let userHeroes: Array<string> = []\nexport let aIHeroes: Array<string> = []\n\ndeclare function require(name: string): any;\n\n//TRYING TO FIGURE OUT HOW TO MANUALLY INPUT PICKS\n/*let prompt = require('prompt');\nprompt.start();\nawait prompt.get(['hero', 'row', 'column', 'bookReadPosition'], function (err: any, result: any) {\n  console.log(result.hero);\n});\n*/\n\nexport async function draft() {\n    if(currentPick === \"ally\") {\n        /*let prompt = require('prompt');\n        prompt.start();\n        await prompt.get(['hero', 'row', 'column', 'bookReadPosition'], function (err: any, result: any) {\n        console.log('Command-line input received:');\n        console.log(result.hero);\n        pick(result.hero, result.row, result.column, result.bookReadPosition)\n        });*/\n        pick(userPicks.shift(0), 2, 2, 5);\n        \n    }\n    else {\n        armorSorted = armorSort();\n        highestArmor = armorSorted.filter(tied => tied._armor === armorSorted[0]._armor)\n        pick(highestArmor[0]._name, 1, 2, 2)\n\n        \n    }\n}\n\n//DRAFT \n\nlet userPicks: any = [\"werewolf\", \"poisonMage\", \"iceMage\", \"blacksmith\", \"berserker\"] // find a way to be able to type this rather than any type!\n\nlet firstpick: Team = startingPriority();\n//console.log(firstpick)\nlet pickSequenceArray: Array<Team> = pickSequence(firstpick);\nlet currentPick: Team = firstpick;\nlet pickNumber = 0;\n//console.log(firstpick);\n//console.log(pickSequenceArray);\n\n//this function selects a draftable hero and changes board position, h = hero, r = row, c = column, brp = bookread position\nfunction pick(h: string, r: number, c: number, brp: number) { //I think hero name, row, and column all need to be types\n    let picked: Hero = heroRoster.Find(h);\n        if (picked._draftable === false) {\n            console.log(\"That hero isn't draftable!\");\n        } else {\n            picked._draftable = false;\n            picked._boardPositionRow = r;\n            picked._boardPositionColumn = c;\n            picked._bookReadPosition = brp;\n            if(currentPick === \"ally\") {\n                userHeroes.push(picked._name);\n            }\n            else {\n                aIHeroes.push(picked._name);\n            }\n            //add functionality to add the selected hero to an actual team's board\n        }\n        draftRoster = updateDraftRoster();\n        pickNumber ++;\n        currentPick = pickSequenceArray[pickNumber]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/grid.tsx",["111"],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/heroRoster.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/updateDraftRoster.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/armorSort.ts",["112","113","114","115","116"],[],"import { Hero } from \"./Hero\";\nimport { Heroes } from \"./Heroes\";\nimport { heroRoster } from \"./heroRoster\";\nimport { updateDraftRoster } from \"./updateDraftRoster\";\nimport { Team } from \"./Team\";\nimport { startingPriority } from \"./startingPriority\";\nimport { pickSequence } from \"./pickSequence\";\n\nexport function armorSort(): Array<Hero> {\n    \n    let draftableArmorSort = updateDraftRoster() //will need to add functionality to check which heroes need to be armor sorted based on whether we are in draft, in game, checking allies vs. enemies etc...\n    \n    draftableArmorSort.sort((a, b) => {\n        return b.armor - a.armor;\n    });\n    return draftableArmorSort\n}","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/startingPriority.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Heroes.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Hero.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/data/boardPositionData.ts",[],[],{"ruleId":"117","severity":1,"message":"118","line":72,"column":7,"nodeType":"119","messageId":"120","endLine":72,"endColumn":13},{"ruleId":"117","severity":1,"message":"121","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"124","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":27},{"ruleId":"117","severity":1,"message":"125","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":14},{"ruleId":"117","severity":1,"message":"126","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":26},{"ruleId":"117","severity":1,"message":"127","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":22},{"ruleId":"117","severity":1,"message":"128","line":8,"column":10,"nodeType":"119","messageId":"120","endLine":8,"endColumn":19},{"ruleId":"117","severity":1,"message":"129","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":20},{"ruleId":"117","severity":1,"message":"130","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":19},{"ruleId":"117","severity":1,"message":"131","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":21},{"ruleId":"117","severity":1,"message":"132","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":20},{"ruleId":"117","severity":1,"message":"133","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":18},{"ruleId":"117","severity":1,"message":"134","line":120,"column":19,"nodeType":"119","messageId":"120","endLine":120,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":147,"column":51,"nodeType":"137","messageId":"138","endLine":147,"endColumn":53},{"ruleId":"117","severity":1,"message":"122","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"139","line":12,"column":5,"nodeType":"119","messageId":"120","endLine":12,"endColumn":29},{"ruleId":"117","severity":1,"message":"140","line":20,"column":5,"nodeType":"119","messageId":"120","endLine":20,"endColumn":31},{"ruleId":"117","severity":1,"message":"141","line":24,"column":18,"nodeType":"119","messageId":"120","endLine":24,"endColumn":25},{"ruleId":"117","severity":1,"message":"130","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":19},{"ruleId":"117","severity":1,"message":"122","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"125","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":14},{"ruleId":"117","severity":1,"message":"126","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":26},{"ruleId":"117","severity":1,"message":"127","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":22},"@typescript-eslint/no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'Hero' is defined but never used.","'Heroes' is defined but never used.","'heroRoster' is defined but never used.","'updateDraftRoster' is defined but never used.","'Team' is defined but never used.","'startingPriority' is defined but never used.","'pickSequence' is defined but never used.","'armorSort' is defined but never used.","'CardSchema' is defined but never used.","'Component' is defined but never used.","'arrayBuffer' is defined but never used.","'AnyARecord' is defined but never used.","'heroData' is defined but never used.","'filtered' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'draftRoster' is assigned a value but never used.","'highestHealth' is assigned a value but never used.","'require' is defined but never used."]