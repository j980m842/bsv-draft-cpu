[{"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/index.tsx":"1","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reportWebVitals.ts":"2","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/App.tsx":"3","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/pickSequence.ts":"4","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/executeDraft.ts":"5","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/utilities/heroQuery.ts":"6","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/data/heroData.ts":"7","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx":"8","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/draftSystem.ts":"9","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/grid.tsx":"10","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/heroRoster.ts":"11","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/updateDraftRoster.ts":"12","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/armorSort.ts":"13","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/startingPriority.ts":"14","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Heroes.ts":"15","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Hero.ts":"16"},{"size":593,"mtime":1668023517020,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1667330412150,"results":"19","hashOfConfig":"18"},{"size":5248,"mtime":1668027486377,"results":"20","hashOfConfig":"18"},{"size":505,"mtime":1668024450505,"results":"21","hashOfConfig":"18"},{"size":728,"mtime":1667357721761,"results":"22","hashOfConfig":"18"},{"size":208,"mtime":1668012626471,"results":"23","hashOfConfig":"18"},{"size":4636,"mtime":1668011752430,"results":"24","hashOfConfig":"18"},{"size":2243,"mtime":1668029390093,"results":"25","hashOfConfig":"18"},{"size":3182,"mtime":1668012702206,"results":"26","hashOfConfig":"18"},{"size":1346,"mtime":1668029372776,"results":"27","hashOfConfig":"18"},{"size":559,"mtime":1667333890904,"results":"28","hashOfConfig":"18"},{"size":264,"mtime":1667333919563,"results":"29","hashOfConfig":"18"},{"size":672,"mtime":1667333936634,"results":"30","hashOfConfig":"18"},{"size":170,"mtime":1667333919436,"results":"31","hashOfConfig":"18"},{"size":750,"mtime":1667333890847,"results":"32","hashOfConfig":"18"},{"size":799,"mtime":1667333890778,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f83h7b",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/index.tsx",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reportWebVitals.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/App.tsx",["89","90","91","92","93","94","95","96","97","98","99"],[],"import * as React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HeroList from \"./reactComponents/heroList\"\nimport { draft, userHeroes, aIHeroes } from \"./components/draftSystem\";\nimport { executeDraft } from './components/executeDraft';\nimport { heroData } from './data/heroData';\nimport { heroQuery } from './utilities/heroQuery';\nimport { CardSchema } from './data/cardSchema';\nimport { EventType, Event } from './data/EventType';\nimport { pickSequence } from './components/pickSequence';\nimport { Team } from './components/Team';\nimport { randomInt } from 'node:crypto';\nimport { enemyDraftPick } from './utilities/enemyDraftPick';\n\ninterface Props {\n}\n \ninterface State {\n  eventSequenceIndex: number\n  draftableHeroes: CardSchema[],\n  draftableHeroesNames: String[],\n  draftableHeroKeyTest: String,\n  enemyHeroes: String[],\n  allyHeroes: String[],\n  currentPick: Team,\n  priority: Team\n  draftSequence: Team[]\n  draftSequenceIndex: number\n}\n \nclass App  extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n    eventSequenceIndex: 0,\n    allyHeroes: [],\n    enemyHeroes: [],\n    draftableHeroes: [],\n    draftableHeroesNames: [],\n    draftableHeroKeyTest: '',\n    currentPick: 'ally',\n    priority: 'ally',\n    draftSequence: [],\n    draftSequenceIndex: 0\n}\n}\n\ncomponentDidMount() {\n\n  //RIGHT HERE START WORKING ON HOW TO QUERY DATA FROM \"HERODATA\"\n  //WHEN STUCK LOOK INTO REDUCE METHOD FOR ARRAYS\n\n/*\n  let draftableHeroes = [...this.state.draftableHeroes]\n  draftableHeroes = heroRoster._heroes\n  let dHlength = draftableHeroes.length\n  let draftableHeroesNames: String[] = []\n  for (let i = 0; i < dHlength; i++) {\n      draftableHeroesNames.push(draftableHeroes[i]._name)\n  }\n  this.setState({ draftableHeroesNames });\n\n\n  \n  const allyHeroes = [...this.state.allyHeroes];\n  allyHeroes[0] = 'haha';\n  const enemyHeroes = [...this.state.enemyHeroes];\n  enemyHeroes[0] = 'darkKnight';\n  this.setState({ allyHeroes });\n  this.setState({ enemyHeroes });\n*/\n  \n\n\n  function priorityPicker() {\n    let result = Math.random()*2\n    console.log(result)\n    let p: Team = 'ally'\n    if (result >= 1) {\n     p = 'ally' \n    } else {\n      p = 'enemy'\n    }\n    return p\n  }\n\n  let priority: Team = this.state.priority \n  priority = priorityPicker()\n  this.setState({ priority });\n\n  let draftSequence: Team[] = pickSequence(this.state.priority)\n  this.setState({ draftSequence })\n\n  let draftableHeroes = this.state.draftableHeroes\n  draftableHeroes = heroData\n  this.setState({ draftableHeroes });\n\n  let result = heroQuery('warrior')\n  //console.log(result?.startingHealth)\n\n  \n}\n\n\n\nhandleHeroPick = (pick: CardSchema) => {\n  \n  const allyHeroes = this.state.allyHeroes\n  allyHeroes.push(pick.name)\n  this.setState({ allyHeroes })\n\n  const draftableHeroes = this.state.draftableHeroes.filter(h => h.name !== pick.name);\n  this.setState({ draftableHeroes })\n\n  let currentPick = this.state.currentPick\n  let draftSequenceIndex = this.state.draftSequenceIndex\n  draftSequenceIndex++\n  this.setState({ draftSequenceIndex })\n  currentPick = this.state.draftSequence[this.state.draftSequenceIndex + 1]\n  this.setState({ currentPick })\n\n\n}\n\nenemyDraftPick = () => {\n  let draftableHeroes = this.state.draftableHeroes\n  const index = Math.floor(Math.random()*draftableHeroes.length)\n  const pick = draftableHeroes[index]\n\n  const enemyHeroes = this.state.enemyHeroes\n  enemyHeroes.push(pick.name)\n  this.setState({ enemyHeroes })\n  console.log('enemy draft pick executed')\n\n  draftableHeroes = this.state.draftableHeroes.filter(h => h.name !== pick.name);\n  this.setState({ draftableHeroes })\n  \n  let currentPick = this.state.currentPick\n  let draftSequenceIndex = this.state.draftSequenceIndex\n  draftSequenceIndex++\n  this.setState({ draftSequenceIndex })\n  currentPick = this.state.draftSequence[this.state.draftSequenceIndex + 1]\n  this.setState({ currentPick })\n  \n}\n  \n   \n\nrender() {\n\n  let draftResult = executeDraft();\n  let attacker = 'fireMage' //WORK NOW ON MAKING HEROQUERY FUNCTION A MODULE AND USING IT WITH THE ONCLICK STUFF\n  console.log(this.state.currentPick)\n  console.log(this.state.draftSequenceIndex)\n  console.log(this.state.draftSequence[this.state.draftSequenceIndex])\n  \n  if (this.state.currentPick === 'enemy') {\n    console.log('re-rendered with current pick == enemy')\n    \n    this.enemyDraftPick();\n  }\n\n\n  \n\n\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Brimstone Valley Draft AI</h1>\n        <p>\n          Pick some Heroes!\n        </p>\n        <HeroList\n          allyHeroes={this.state.allyHeroes}\n          enemyHeroes={this.state.enemyHeroes}\n          draftableHeroes={this.state.draftableHeroes}\n          draftableHeroesNames={this.state.draftableHeroesNames}\n          draftableHeroKeyTest={this.state.draftableHeroKeyTest}\n\n          onHeroPick={this.handleHeroPick}\n        />\n        \n      </header>\n      <footer>\n      <a\n          className=\"App-link\"\n          href=\"https://brimstonevalley.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Play Brimstone Valley\n        </a>\n      </footer>\n    </div>\n  );\n}\n \n}\n\n\n\n\nexport default App;\n\n","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/pickSequence.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/executeDraft.ts",["100","101","102","103","104","105","106","107"],[],"import { Hero } from \"./Hero\";\nimport { Heroes } from \"./Heroes\";\nimport { heroRoster } from \"./heroRoster\";\nimport { updateDraftRoster } from \"./updateDraftRoster\";\nimport { Team } from \"./Team\";\nimport { startingPriority } from \"./startingPriority\";\nimport { pickSequence } from \"./pickSequence\";\nimport { armorSort } from \"./armorSort\";\nimport { draft, userHeroes, aIHeroes } from \"./draftSystem\";\n\nexport function executeDraft() {\n\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\ndraft();\n\nconsole.log(\"user's team is \")\nconsole.log(userHeroes)\nconsole.log(\"AI's team is \")\nconsole.log(aIHeroes)\n\nlet drafted = {\n    userHeroes: userHeroes,\n    aIHeroes: aIHeroes\n}\n\n    return drafted\n\n};\n\n","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/utilities/heroQuery.ts",["108"],[],"import { heroData } from \"../data/heroData\"\nimport { CardSchema } from '../data/cardSchema';\n\n\nexport function heroQuery(hero: String) {\n    let result = heroData.find(h => h.key === hero)\n    return result\n}","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/data/heroData.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/heroList.tsx",["109","110","111","112","113","114","115","116","117","118"],[],"import * as React from 'react';\nimport { Component } from 'react';\nimport { arrayBuffer } from 'stream/consumers';\nimport { CardSchema } from '../data/cardSchema';\nimport Grid from './grid'\n\n\ninterface Props {\n    draftableHeroes: CardSchema[],\n    draftableHeroesNames: String[],\n    draftableHeroKeyTest: String,\n    enemyHeroes: String[],\n    allyHeroes: String[]\n    onHeroPick: any //MAKE SURE YOU GIVE THIS THE PROPER TYPE!\n  }\n\ninterface State {}\n\nclass HeroList extends React.Component<Props> {\n    \n\n\n \n\n    render() { \n\n        //let heroList: Hero[] = heroRoster._heroes THIS IS WHAT IM GOING FOR\n        const { allyHeroes, enemyHeroes} = this.props\n        let allyStringTest: string[] = ['berserker', 'warrior', 'archer']\n        let enemyStringTest: string[] = ['badHero', 'youchas', 'darkKnight']\n        let pick = this.props.draftableHeroes\n        //console.log(this.props.draftableHeroes)\n        let testStringArray: String[] = ['one', 'two', 'three']\n        let testObjectArray: Object[] = [{one: 1}, {two: 2}, {three: 3}, {four: 4}]\n\n        //let draftableHeroes = this.props.draftableHeroes\n        //draftableHeroes = heroRoster._heroes\n        //this.setState({ draftableHeroes });\n        \n\n\n\n\n\n\n        return ( \n            <div>\n                <h1>Draft Pool</h1>\n                <div>\n                    {this.props.draftableHeroes.map(hero => (\n                        <button \n                            onClick={() => this.props.onHeroPick(hero)} \n                            className=\"btn m-2 btn-primary\">{hero.name}</button> \n                    ))}\n                </div>\n                <h1>Your Team</h1>\n                <Grid></Grid>\n                <div>\n                    {this.props.allyHeroes.map(hero => (\n                        <button className=\"btn m-2 btn-primary\">{hero}</button> \n                    ))}\n                </div>\n                \n                <h1>Enemy Team</h1>\n                <Grid></Grid>\n                <div>\n                    {this.props.enemyHeroes.map(hero => (\n                        <button className=\"btn m-2 btn-primary\">{hero}</button> \n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default HeroList;","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/draftSystem.ts",["119","120","121","122"],[],"import { Hero } from \"./Hero\";\nimport { Heroes } from \"./Heroes\";\nimport { heroRoster } from \"./heroRoster\";\nimport { updateDraftRoster } from \"./updateDraftRoster\";\nimport { Team } from \"./Team\";\nimport { startingPriority } from \"./startingPriority\";\nimport { pickSequence } from \"./pickSequence\";\nimport { armorSort } from \"./armorSort\";\n\n\n\nlet draftRoster: Array<Hero> = updateDraftRoster()\n//SORTING FUNCTIONS WORKING!!\nlet armorSorted: Array<Hero> = armorSort();\nlet highestArmor: Array<Hero> = armorSorted.filter(tied => tied._armor === armorSorted[0]._armor)\n//console.log(highestArmor)\n\n\nlet healthSorted: Array<Hero> = heroRoster.healthSort();\nlet highestHealth: Array<Hero> = healthSorted.filter(tied => tied._health === healthSorted[0]._health)\nexport let userHeroes: Array<string> = []\nexport let aIHeroes: Array<string> = []\n\ndeclare function require(name: string): any;\n\n//TRYING TO FIGURE OUT HOW TO MANUALLY INPUT PICKS\n/*let prompt = require('prompt');\nprompt.start();\nawait prompt.get(['hero', 'row', 'column', 'bookReadPosition'], function (err: any, result: any) {\n  console.log(result.hero);\n});\n*/\n\nexport async function draft() {\n    if(currentPick === \"ally\") {\n        /*let prompt = require('prompt');\n        prompt.start();\n        await prompt.get(['hero', 'row', 'column', 'bookReadPosition'], function (err: any, result: any) {\n        console.log('Command-line input received:');\n        console.log(result.hero);\n        pick(result.hero, result.row, result.column, result.bookReadPosition)\n        });*/\n        pick(userPicks.shift(0), 2, 2, 5);\n        \n    }\n    else {\n        armorSorted = armorSort();\n        highestArmor = armorSorted.filter(tied => tied._armor === armorSorted[0]._armor)\n        pick(highestArmor[0]._name, 1, 2, 2)\n\n        \n    }\n}\n\n//DRAFT \n\nlet userPicks: any = [\"werewolf\", \"poisonMage\", \"iceMage\", \"blacksmith\", \"berserker\"] // find a way to be able to type this rather than any type!\n\nlet firstpick: Team = startingPriority();\n//console.log(firstpick)\nlet pickSequenceArray: Array<Team> = pickSequence(firstpick);\nlet currentPick: Team = firstpick;\nlet pickNumber = 0;\n//console.log(firstpick);\n//console.log(pickSequenceArray);\n\n//this function selects a draftable hero and changes board position, h = hero, r = row, c = column, brp = bookread position\nfunction pick(h: string, r: number, c: number, brp: number) { //I think hero name, row, and column all need to be types\n    let picked: Hero = heroRoster.Find(h);\n        if (picked._draftable === false) {\n            console.log(\"That hero isn't draftable!\");\n        } else {\n            picked._draftable = false;\n            picked._boardPositionRow = r;\n            picked._boardPositionColumn = c;\n            picked._bookReadPosition = brp;\n            if(currentPick === \"ally\") {\n                userHeroes.push(picked._name);\n            }\n            else {\n                aIHeroes.push(picked._name);\n            }\n            //add functionality to add the selected hero to an actual team's board\n        }\n        draftRoster = updateDraftRoster();\n        pickNumber ++;\n        currentPick = pickSequenceArray[pickNumber]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/reactComponents/grid.tsx",["123"],[],"import * as React from 'react';\nimport { Component } from 'react';\n\n\nclass Grid extends React.Component {\n\n    render() { \n        return ( \n            <div className=\"container\">\n  <div className=\"row\">\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n  </div>\n  <div className=\"row\">\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n  </div>\n  <div className=\"row\">\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n    <div className=\"col-sm outline\">\n      <button className=\"btn m-2 btn-primary tile\">Spot</button>\n    </div>\n  </div>\n</div>\n         );\n    }\n}\n \nexport default Grid;","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/heroRoster.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/updateDraftRoster.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/armorSort.ts",["124","125","126","127","128"],[],"import { Hero } from \"./Hero\";\nimport { Heroes } from \"./Heroes\";\nimport { heroRoster } from \"./heroRoster\";\nimport { updateDraftRoster } from \"./updateDraftRoster\";\nimport { Team } from \"./Team\";\nimport { startingPriority } from \"./startingPriority\";\nimport { pickSequence } from \"./pickSequence\";\n\nexport function armorSort(): Array<Hero> {\n    \n    let draftableArmorSort = updateDraftRoster() //will need to add functionality to check which heroes need to be armor sorted based on whether we are in draft, in game, checking allies vs. enemies etc...\n    \n    draftableArmorSort.sort((a, b) => {\n        return b.armor - a.armor;\n    });\n    return draftableArmorSort\n}","/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/startingPriority.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Heroes.ts",[],[],"/Users/j980m842/Documents/Development/bsv-draft-cpu/src/components/Hero.ts",[],[],{"ruleId":"129","severity":1,"message":"130","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":12},{"ruleId":"129","severity":1,"message":"133","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":15},{"ruleId":"129","severity":1,"message":"134","line":5,"column":17,"nodeType":"131","messageId":"132","endLine":5,"endColumn":27},{"ruleId":"129","severity":1,"message":"135","line":5,"column":29,"nodeType":"131","messageId":"132","endLine":5,"endColumn":37},{"ruleId":"129","severity":1,"message":"136","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":19},{"ruleId":"129","severity":1,"message":"137","line":10,"column":21,"nodeType":"131","messageId":"132","endLine":10,"endColumn":26},{"ruleId":"129","severity":1,"message":"138","line":13,"column":10,"nodeType":"131","messageId":"132","endLine":13,"endColumn":19},{"ruleId":"129","severity":1,"message":"139","line":14,"column":10,"nodeType":"131","messageId":"132","endLine":14,"endColumn":24},{"ruleId":"129","severity":1,"message":"140","line":100,"column":7,"nodeType":"131","messageId":"132","endLine":100,"endColumn":13},{"ruleId":"129","severity":1,"message":"141","line":153,"column":7,"nodeType":"131","messageId":"132","endLine":153,"endColumn":18},{"ruleId":"129","severity":1,"message":"142","line":154,"column":7,"nodeType":"131","messageId":"132","endLine":154,"endColumn":15},{"ruleId":"129","severity":1,"message":"143","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":14},{"ruleId":"129","severity":1,"message":"144","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"145","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":20},{"ruleId":"129","severity":1,"message":"146","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":27},{"ruleId":"129","severity":1,"message":"147","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":14},{"ruleId":"129","severity":1,"message":"148","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":26},{"ruleId":"129","severity":1,"message":"149","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":22},{"ruleId":"129","severity":1,"message":"150","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":19},{"ruleId":"129","severity":1,"message":"151","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":20},{"ruleId":"129","severity":1,"message":"152","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":19},{"ruleId":"129","severity":1,"message":"153","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":21},{"ruleId":"129","severity":1,"message":"154","line":17,"column":11,"nodeType":"131","messageId":"132","endLine":17,"endColumn":16},{"ruleId":"129","severity":1,"message":"155","line":28,"column":17,"nodeType":"131","messageId":"132","endLine":28,"endColumn":27},{"ruleId":"129","severity":1,"message":"156","line":28,"column":29,"nodeType":"131","messageId":"132","endLine":28,"endColumn":40},{"ruleId":"129","severity":1,"message":"157","line":29,"column":13,"nodeType":"131","messageId":"132","endLine":29,"endColumn":37},{"ruleId":"129","severity":1,"message":"158","line":30,"column":13,"nodeType":"131","messageId":"132","endLine":30,"endColumn":38},{"ruleId":"129","severity":1,"message":"159","line":31,"column":13,"nodeType":"131","messageId":"132","endLine":31,"endColumn":17},{"ruleId":"129","severity":1,"message":"160","line":33,"column":13,"nodeType":"131","messageId":"132","endLine":33,"endColumn":38},{"ruleId":"129","severity":1,"message":"161","line":34,"column":13,"nodeType":"131","messageId":"132","endLine":34,"endColumn":38},{"ruleId":"129","severity":1,"message":"144","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"162","line":12,"column":5,"nodeType":"131","messageId":"132","endLine":12,"endColumn":29},{"ruleId":"129","severity":1,"message":"163","line":20,"column":5,"nodeType":"131","messageId":"132","endLine":20,"endColumn":31},{"ruleId":"129","severity":1,"message":"164","line":24,"column":18,"nodeType":"131","messageId":"132","endLine":24,"endColumn":25},{"ruleId":"129","severity":1,"message":"152","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":19},{"ruleId":"129","severity":1,"message":"144","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"145","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":20},{"ruleId":"129","severity":1,"message":"147","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":14},{"ruleId":"129","severity":1,"message":"148","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":26},{"ruleId":"129","severity":1,"message":"149","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":22},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'draft' is defined but never used.","'userHeroes' is defined but never used.","'aIHeroes' is defined but never used.","'EventType' is defined but never used.","'Event' is defined but never used.","'randomInt' is defined but never used.","'enemyDraftPick' is defined but never used.","'result' is assigned a value but never used.","'draftResult' is assigned a value but never used.","'attacker' is assigned a value but never used.","'Hero' is defined but never used.","'Heroes' is defined but never used.","'heroRoster' is defined but never used.","'updateDraftRoster' is defined but never used.","'Team' is defined but never used.","'startingPriority' is defined but never used.","'pickSequence' is defined but never used.","'armorSort' is defined but never used.","'CardSchema' is defined but never used.","'Component' is defined but never used.","'arrayBuffer' is defined but never used.","'State' is defined but never used.","'allyHeroes' is assigned a value but never used.","'enemyHeroes' is assigned a value but never used.","'allyStringTest' is assigned a value but never used.","'enemyStringTest' is assigned a value but never used.","'pick' is assigned a value but never used.","'testStringArray' is assigned a value but never used.","'testObjectArray' is assigned a value but never used.","'draftRoster' is assigned a value but never used.","'highestHealth' is assigned a value but never used.","'require' is defined but never used."]